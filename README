Here follows a set of implementations of various algorithms and data structures
which I developed for learning purposes through the years. The list here is not
intended to be either complete or exaustive but I'll try to improve that as
soon as I have some spare time.

What you'll find:
.
`-- dictionary/
    `-- chaineddict (chained lists for collision resolution)
    `-- oadict (open addressing for collision resolution)
`-- cache/
    `-- lru cache
`-- lists/
    `-- linked list
    `-- skip lists (a probabilistic alternative to balanced trees)
`-- math/
    `-- 90Â° degrees matrix rotation
`-- optimization/ (combinatorial optimization algorithms)
    `-- simulated annealing
`-- sets/ (set related algorithms)
    `-- union find
`-- sorting/ (sorting algorithms & related)
    `-- insertion sort
    `-- selection sort
    `-- merge sort
    `-- quick sort
    `-- heapsort
    `-- binary search
`-- trees/ (various trees implementations)
    `-- heap
    `-- trie

In 'interview questions' there are some implementations of solutions for
some interview problems.

TODO:
- lay out a better organization
- have running examples of every algorithm/data structure
